name: CI/CD Landing

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

  pull_request:
    branches:
      - '*'



jobs:
  Build_Landing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: build
        run: docker build -t landing .



  # Sonar:
  #   needs: Build_Landing
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: SonarCloud Scan
  #       uses: SonarSource/sonarcloud-github-action@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Landing_Push_Latest_Image:
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    needs: Build_Landing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: create image from repository
        run: docker build -t ghcr.io/flickit-platform/flickit-landing:"${GITHUB_SHA:0:7}" .
      - name: login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: flickit-platform
          password: ${{ secrets.GH_PACKAGES_TOKEN }}
      - name: push image to GitHub Container Registry
        run: docker push ghcr.io/flickit-platform/flickit-landing:"${GITHUB_SHA:0:7}"

  Landing_Deploy_Latest:
    needs: Landing_Push_Latest_Image
    runs-on: ubuntu-latest
    steps:
      - name: Deploy service on Webhook
        run: |
          status_code=$(curl --silent --output /dev/null --write-out "%{http_code}" -X POST "${{ secrets.DEPLOY_WEBHOOK_URL }}?tag=${GITHUB_SHA:0:7}")
          if [ "$status_code" -ne 204 ]; then
            echo "Unexpected status code: $status_code"
            exit 1
          fi


  Landing_Push_Image:
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
    needs: Build_Landing
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.TAG.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
      - name: Set output
        id: TAG
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.TAG.outputs.tag }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.TAG.outputs.tag }}
      - name: login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: flickit-platform
          password: ${{ secrets.GH_PACKAGES_TOKEN }}
      - uses: actions/checkout@v2
      - name: create image from repository
        run: docker build -t ghcr.io/flickit-platform/flickit-landing:${{ steps.TAG.outputs.tag }} .
      - name: push image to GitHub Container Registry
        run: docker push ghcr.io/flickit-platform/flickit-landing:${{ steps.TAG.outputs.tag }}

  Landing_Deploy:
    needs: Landing_Push_Image
    runs-on: ubuntu-latest
    steps:
      - name: Deploy service on Webhook
        run: |
          status_code=$(curl --silent --output /dev/null --write-out "%{http_code}" -X POST "${{ secrets.LANDING_VERSION }}?LANDING_VERSION=${TAG}")
          if [ "$status_code" -ne 204 ]; then
            echo "Unexpected status code: $status_code"
            exit 1
          fi
        env:
          TAG: ${{needs.Landing_Push_Image.outputs.TAG}}  
